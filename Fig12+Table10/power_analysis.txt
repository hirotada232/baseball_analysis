set.seed(123)
N <- nrow(m.data1)
nsim <- 1000

mu_vec  <- predict(mod_BEINF, what="mu",  type="response")
sg_vec  <- predict(mod_BEINF, what="sigma", type="response")
nu_vec  <- predict(mod_BEINF, what="nu",  type="response")
tau_vec <- predict(mod_BEINF, what="tau", type="response")

simMatrix <- matrix(NA, nrow = N, ncol = nsim)
for(i in 1:nsim){
  simMatrix[, i] <- rBEINF(n = N, mu = mu_vec, sigma = sg_vec, 
                           nu = nu_vec, tau = tau_vec)
}


library(DHARMa)

dh <- createDHARMa(
  simulatedResponse = simMatrix,               # 上で作った N行 x nsim列 のシミュレーション
  observedResponse  = m.data1$OBP,             # 実際の観測応答
  fittedPredictedResponse = mu_vec,           # 期待値または予測値
  integerResponse = FALSE                     # 今回は連続なのでFALSE
)
plot(dh)
testZeroInflation(dh)
testDispersion(dh)
################3


#power analysis
# 例: 既に mod_BEINF というgamlssモデルをフィット済み
mu_hat  <- predict(mod_BEINF, what = "mu",    type="response")
sg_hat  <- predict(mod_BEINF, what = "sigma", type="response")
nu_hat  <- predict(mod_BEINF, what = "nu",    type="response")
tau_hat <- predict(mod_BEINF, what = "tau",   type="response")

# モデル式で pre_pinch_result の係数を操作したい場合:
# 例: small_effect / large_effect など、複数パターンを定義
###
start_time <- Sys.time()
set.seed(123)
nsim <- 12000
pvals <- numeric(nsim)

for(i in 1:nsim){
  if (i %% 50 == 0) {
    print(i)
  }
  # (1) データ生成
  y_sim <- rBEINF(
    n = length(mu_hat),
    mu = mu_hat, 
    sigma = sg_hat,
    nu = nu_hat, 
    tau = tau_hat
  )

  # (2) フィット
  #    データフレームにシミュレートした y を入れて再度 gamlss を当てる
  df_sim <- m.data1
  df_sim$OBP_sim <- y_sim

  mod_sim <- gamlss(
    formula = OBP_sim ~ pre_pinch_result + inning, # 同じモデル式
    sigma.formula = ~ 1,
    nu.formula = ~ 1,
    tau.formula = ~ 1,
    family = BEINF,
    data = df_sim,
    trace  = FALSE
  )

  # (A) capture.output() で要約表示を抑制
  tmp <- capture.output({
    summ <- summary(mod_sim)
  })

  # "Mu Coefficients" の p値にアクセス
  # 例えば 1列目が Estimate, 4列目が Pr(>|t|) になっていることが多いが要確認
  p_val <- summ["pre_pinch_result", "Pr(>|t|)"]
 pvals[i] <- p_val
}

# (4) p値 < 0.05 の割合 = 検出力
mean(pvals < 0.05)
end_time <- Sys.time()

# 計算時間を表示
end_time - start_time

